##full_autosnort configuration file##
# The options below are configuration options that need to be filled out (unless otherwise noted) for the script to run successfully. Each variable/configuration option will have an explanation as to what it is for, why it needs to be set, and valid configuration options.
# After Autosnort completes and you confirm everything is running correctly, you may delete, shred, burn, or consume this file however you see fit.
# But in all seriousness, after the script completes, store this file some place SAFE, or delete it.

##ui_inst##
# This option sets whether or not Autosnort will install and configure a local Apache and mysql-server in order to install a web-based intrusion event review interface.
# If you want to install a web-based IDS event console (e.g. snorby) this option MUST be set to 1.
##Options##
#1: Setting ui_inst to 1 enables apache and mysql server to be enabled on startup. This is required for web-based IDS event review consoles. It also generates a private key and self-signed cert for SSL operation.
#2: Setting ui_inst to 2 means apache and mysql will not be configured to run on startup, you will not have an private key and self-signed cert generated.
#default setting: 1 (Installs mysql and apache in order to install a fully functional stand-alone sensor)
ui_inst=1

##root_mysql_pass##
# This sets the root mysql user's password.
##Options##
# Enter a passphrase below, encased in single quotes.
# DO NOT USE single quotes anywhere in your actual password (''), double quotes (""), back ticks (``), ampersands (&) or spaces ( ); they will cause problems.
# Example:root_mysql_pass='Bl_;_dZ2S.h?z71A4*f!NF+v3-WY' means the password will be: Bl_;_dZ2S.h?z71A4*f!NF+v3-WY
root_mysql_pass='1'


##snort_basedir##
# This option is sets the directory where you would like snort to be installed.
# Do not place any trailing slashes (/) at the end of the desired directory path.
# See the default setting for a valid example
##Options##
# Any valid unix directory path, Autosnort will create parent directories if they do not exist. MUST BE AN ABSOLUTE PATH.
#default setting: /opt/snort
snort_basedir=/opt/snort

##snort_iface##
# This is the name of the interface you will be using snort to sniff traffic on.
# This option MUST be set.
# Example:
# snort_iface=eth1
#default setting: snort_iface=eth1
snort_iface=eth0

##o_code##
# This setting is the oink code that will be used by pulled pork to download your rules.
# You MUST input a valid oink code for the script to function normally.
# This can be a registered user oink code, or VRT rule subscription oink code; doesn't matter.
# If you have no idea what an oink code is, or how to get one visit snort.org and create an account (it's free)
# After registering your account, and logging in under your account settings should be the ability to check your subscriptions and oink codes. The oink code is a series of numbers and letters.
# Example:
# o_code=2426170067b2e110c1f3fdee444118fcc15180f0
# the above is not a valid oink code; do not use it.
o_code=6a7aa9f946223f674f4df281e1b683ef74963c9c

##snort_mysql_pass##
# This option sets the password for the 'snort' database user that will be used to access the intrusion event database for your web interface of choice.
# If you are installing a web based IDS event review console, please enter a password here; this will be the actual user your web application will use to perform database access. 
##Options##
# Enter a passphrase below, encased in single quotes.
# DO NOT USE single quotes anywhere in your actual password (''), double quotes (""), back ticks (``), ampersands (&) or spaces ( ); they have special meaning to the shell or shell tools, and will cause problems.
# Example:snort_mysql_pass='Bl_;_dZ2S.h?z71A4*f!NF+v3-WY' means the password will be: Bl_;_dZ2S.h?z71A4*f!NF+v3-WY
snort_mysql_pass='1'

##r_dbase##
#Controls remote database logging options via barnyard2.
#If "ui_inst" is set to 2, THIS VARIABLE MUST BE SET.
##Options##
#r_dbase=1: You have a remote database you would like barnyard 2 to log to. If this option is selected, fill out rdb_user, rdb_name, rdb_host, and rdb_pass_1 options below.
#r_dbase=2: Select this option if you wish to set up syslog_full output, or no output mechanism at all.
#default setting: blank (ui_inst default is 1, this variable shouldn't be checked if a web console is being installed.)
r_dbase=

##remote database user, database name, host, and password##
#If r_dbase is set to 1, then fill in these variables with the username, database name, hostname (or ip address), and password (encased in single quotes... same password rules as for snort_mysql_pass and root_mysql_pass) for the database user to connect to a remote database to forward events to. If your password contains special characters that this script cannot handle, after autosnort completes, barnyard2.conf is located $snort_basedir/etc/barnyard2.conf.
#These options do not need to be set if you are installing a web-based IDS event review console.
#default settings: blank
rdb_user=
rdb_name=
rdb_host=
rdb_pass_1=

##ui_choice##
# This option chooses which web interface or output mechanism you would like to install on your system. Ensure the interface install script is in the same directory you ran autosnort from.
# Note if ui_inst is set to 2, all of the web interface installation options will fail, as the proper components have not been configured to start on system boot. 
# Note: If you set r_dbase is set to 1 for a distributed installation to a central IDS console, set ui_choice to 6, otherwise your barnyard2 configuration file may be overwritten!
##Options##
# ui_choice=1: Installs Symmetrix Technologies' Snort Report Intrusion Event Web Interface, a simple PHP-based event interface.
# ui_choice=2: Installs Tactical Flex's Aanval Intrusion Event Web Interface, a powerful, commercial intrusion event review and syslog event collection interface written in PHP. Free for a single sensor installation; to support more sensors you'll need to buy licensing from Tactical Flex.
# ui_choice=3: Installs the open-source BASE Intrusion Event Web Interface. An old, reliable web interface with the unique ability to export intrusion event packet data to pcaps directly from the web interface.
# ui_choice=4: Configures barnyard2 to forward events via syslog to a remote syslog server, or SIEM of your choice over port 514/udp.
# ui_choice=5: Installs Snorby, an open-source Intrusion Event Web Interface, teeming with features.
# ui_choice=6: Installs no output interface at all. Select this option if you configured your sensor to report events to a remote database, or you you don't want to configure any Intrusion Event output mechanisms (e.g. you just wanted to install snort and barynard 2)
# default setting: ui_choice=5 (Everyone seems to want Snorby.)
ui_choice=5

##reboot_choice##
# This option specifies whether or not you want to reboot your system immediately after autosnort is finished. System reboot is highly recommended; some of the web interfaces will not work properly until the system has been rebooted.
##Options##
# reboot_choice=1:reboot the system immediately
# reboot_choice=2:return control of the system (user will reboot system later)
reboot_choice=1

#Interfaces#
# The below are configuration options to fill out for some of the interface installations above.


###autosyslog_full###
# These are configuration settings for shipping syslog_full messages from barnyard to a syslog server or SIEM. 
# If you choose "ui_choice=4" above, FILL THESE OUT. Otherwise, you can safely ignore these options.

##sensor_name##
# This option defines the name of your IDS sensor when sending syslog_full messages to your logging server.
# default: sensor_name=`hostname` -- this sets the name of the IDS sensor in your syslog messages to the value of the hostname command.
sensor_name=`hostname`

##syslog_server##
# This option defines the syslog server you want to ship events to. Enter an IP address in dotted quad format to ship your logs to.
# example: syslog_server=127.0.0.1
# default: blank
syslog_server=

### end autosyslog_full###

